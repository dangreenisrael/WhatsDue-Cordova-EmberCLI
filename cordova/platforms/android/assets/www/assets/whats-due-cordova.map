{"version":3,"sources":["vendor/ember-cli/app-prefix.js","whats-due-cordova/adapter-temp/assignment.js","whats-due-cordova/adapter-temp/course.js","whats-due-cordova/adapter-temp/reminder.js","whats-due-cordova/adapters/application.js","whats-due-cordova/app.js","whats-due-cordova/components/course-profile.js","whats-due-cordova/controllers/application.js","whats-due-cordova/controllers/assignments.js","whats-due-cordova/controllers/completed-assignments.js","whats-due-cordova/controllers/courses.js","whats-due-cordova/controllers/reminders.js","whats-due-cordova/helpers/assignment-divider.js","whats-due-cordova/helpers/icon-device.js","whats-due-cordova/helpers/linkify-descriptions.js","whats-due-cordova/initializers/app-version.js","whats-due-cordova/initializers/ember-cli-fastclick.js","whats-due-cordova/initializers/export-application-global.js","whats-due-cordova/models/assignment.js","whats-due-cordova/models/course.js","whats-due-cordova/models/message.js","whats-due-cordova/models/reminder.js","whats-due-cordova/models/set-reminder.js","whats-due-cordova/models/setting.js","whats-due-cordova/objects/pollster.js","whats-due-cordova/router.js","whats-due-cordova/routes/assignments.js","whats-due-cordova/routes/completed-assignments.js","whats-due-cordova/routes/courses.js","whats-due-cordova/routes/messages.js","whats-due-cordova/routes/reminders.js","whats-due-cordova/routes/support.js","whats-due-cordova/templates/application.js","whats-due-cordova/templates/assignments.js","whats-due-cordova/templates/completed-assignments.js","whats-due-cordova/templates/courses.js","whats-due-cordova/templates/messages.js","whats-due-cordova/templates/reminders.js","whats-due-cordova/templates/support.js","whats-due-cordova/tests/adapter-temp/assignment.jshint.js","whats-due-cordova/tests/adapter-temp/course.jshint.js","whats-due-cordova/tests/adapter-temp/reminder.jshint.js","whats-due-cordova/tests/adapters/application.jshint.js","whats-due-cordova/tests/app.jshint.js","whats-due-cordova/tests/components/course-profile.jshint.js","whats-due-cordova/tests/controllers/application.jshint.js","whats-due-cordova/tests/controllers/assignments.jshint.js","whats-due-cordova/tests/controllers/completed-assignments.jshint.js","whats-due-cordova/tests/controllers/courses.jshint.js","whats-due-cordova/tests/controllers/reminders.jshint.js","whats-due-cordova/tests/helpers/assignment-divider.jshint.js","whats-due-cordova/tests/helpers/icon-device.jshint.js","whats-due-cordova/tests/helpers/linkify-descriptions.jshint.js","whats-due-cordova/tests/helpers/resolver.js","whats-due-cordova/tests/helpers/resolver.jshint.js","whats-due-cordova/tests/helpers/start-app.js","whats-due-cordova/tests/helpers/start-app.jshint.js","whats-due-cordova/tests/models/assignment.jshint.js","whats-due-cordova/tests/models/course.jshint.js","whats-due-cordova/tests/models/message.jshint.js","whats-due-cordova/tests/models/reminder.jshint.js","whats-due-cordova/tests/models/set-reminder.jshint.js","whats-due-cordova/tests/models/setting.jshint.js","whats-due-cordova/tests/objects/pollster.jshint.js","whats-due-cordova/tests/router.jshint.js","whats-due-cordova/tests/routes/assignments.jshint.js","whats-due-cordova/tests/routes/completed-assignments.jshint.js","whats-due-cordova/tests/routes/courses.jshint.js","whats-due-cordova/tests/routes/messages.jshint.js","whats-due-cordova/tests/routes/reminders.jshint.js","whats-due-cordova/tests/routes/support.jshint.js","whats-due-cordova/tests/test-helper.js","whats-due-cordova/tests/test-helper.jshint.js","whats-due-cordova/tests/views/application.jshint.js","whats-due-cordova/tests/views/assignments.jshint.js","whats-due-cordova/tests/views/completed-assignments.jshint.js","whats-due-cordova/tests/views/courses.jshint.js","whats-due-cordova/tests/views/reminders.jshint.js","whats-due-cordova/tests/views/support.jshint.js","whats-due-cordova/views/application.js","whats-due-cordova/views/assignments.js","whats-due-cordova/views/completed-assignments.js","whats-due-cordova/views/courses.js","whats-due-cordova/views/reminders.js","whats-due-cordova/views/support.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('whats-due-cordova/adapter-temp/assignment', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\tvar AssignmentAdapter = DS['default'].LSAdapter.extend({});\n\n\texports['default'] = AssignmentAdapter;\n\n\t// namespace: 'whatsdue-assignment'\n\n});","define('whats-due-cordova/adapter-temp/course', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\tvar CourseAdapter = DS['default'].LSAdapter.extend({});\n\n\texports['default'] = CourseAdapter;\n\n\t//namespace: 'whatsdue-courses'\n\n});","define('whats-due-cordova/adapter-temp/reminder', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\tvar ReminderAdapter = DS['default'].LSAdapter.extend({});\n\n\texports['default'] = ReminderAdapter;\n\n\t//  namespace: 'whatsdue-reminder'\n\n});","define('whats-due-cordova/adapters/application', ['exports', 'ember-localforage-adapter/adapters/localforage'], function (exports, LFAdapter) {\n\n\t'use strict';\n\n\t/**\n\t * Created by dan on 2014-05-13.\n\t */\n\n\t//import DS from 'ember-data';\n\t//\n\t//var ApplicationAdapter = DS.LSAdapter.extend({\n\t//    namespace: 'whatsdue'\n\t//});\n\t//\n\t//export default ApplicationAdapter;\n\n\texports['default'] = LFAdapter['default'];\n\n});","define('whats-due-cordova/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'whats-due-cordova/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n    'use strict';\n\n    var App;\n\n    Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n    App = Ember['default'].Application.extend({\n        modulePrefix: config['default'].modulePrefix,\n        podModulePrefix: config['default'].podModulePrefix,\n        Resolver: Resolver['default'],\n        outputPaths: {\n            app: {\n                css: {\n                    'themes/speech-bubbles': '/app/styles/speech-bubbles.less'\n                }\n            }\n        }\n    });\n\n    loadInitializers['default'](App, config['default'].modulePrefix);\n\n    exports['default'] = App;\n\n});","define('whats-due-cordova/components/course-profile', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var CourseProfileComponent = Ember['default'].Component.extend({\n        actions: {\n            toggleCourse: function toggleCourse() {\n                this.sendAction('toggleCourse');\n            }\n        }\n    });\n\n    exports['default'] = CourseProfileComponent;\n\n});","define('whats-due-cordova/controllers/application', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var ApplicationController = Ember['default'].Controller.extend({\n        actions: {\n            test: function test() {\n                var metaData = this.store.metadataFor('course');\n                console.log(metaData);\n            }\n        },\n        init: function init() {\n            CustomFunctions.setStore(this);\n            var firstRun = function firstRun(ran) {\n                if (ran === null) {\n                    CustomFunctions.setSetting('timestamp_assignment', '0');\n                    CustomFunctions.setSetting('timestamp_course', '0');\n                    CustomFunctions.setSetting('timestamp_message', '0');\n                    CustomFunctions.setSetting('return_user', true);\n                }\n            };\n            CustomFunctions.getSetting('return_user', firstRun);\n\n            Ember['default'].$.ajax({\n                url: 'http://ipinfo.io/json',\n                type: 'GET',\n                context: this,\n                success: function success(data) {\n                    var locationInfo = CustomFunctions.LocationInfo(data);\n                    CustomFunctions.trackEvent('App Opened', 'City', locationInfo.city, 'Region', locationInfo.region, 'Country', locationInfo.country);\n                }\n            });\n\n            var context = this;\n\n            /*\n             * Deal with duplicate reminders\n             */\n\n            this.store.find('reminder', { seconds_before: 86400 }).then(function (records) {\n                /* Find Duplicates */\n                var totalRecords = records.get('length');\n                var counter = 0;\n                /* Destroy duplicate reminders */\n                records.forEach(function (reminder) {\n                    counter = counter + 1;\n                    if (counter < totalRecords) {\n                        console.log(counter);\n                        context.store.find('setReminder', { 'reminder': reminder.get('id') }).then(function (setReminders) {\n                            CustomFunctions.removeSetReminders(setReminders);\n                            reminder.destroyRecord();\n                        });\n                    }\n                });\n            });\n\n            /*\n             *  This deals with the iOS 64 Reminder limit & Default Reminders\n             */\n            var cordovaInitiated = setInterval(function () {\n                if (typeof cordovaLoaded !== 'undefined') {\n\n                    /*First Run*/\n                    if (window.localStorage.getItem('course_code_update') !== 'updated') {\n                        var reminder = context.store.createRecord('reminder', {\n                            id: CustomFunctions.primaryKey('reminders'),\n                            seconds_before: 86400 // 1 day\n                        });\n                        reminder.save();\n                        context.store.find('assignment', { completed: false }).then(function (assignments) {\n                            assignments.get('content').forEach(function (assignment) {\n                                CustomFunctions.setReminder(assignment, reminder, context);\n                            });\n                        });\n                    }\n\n                    window.plugin.notification.local.cancelAll(function () {\n                        context.store.find('reminder');\n                        context.store.find('assignment').then(function () {\n                            CustomUI.swipeRemove();\n                        });\n                        context.store.find('course');\n                        context.store.find('setReminder').then(function (reminders) {\n                            reminders.filterBy('future').sortBy('timestamp').forEach(function (item, index) {\n                                if (index >= 60) {\n                                    return null;\n                                }\n                                var title = item.get('assignment').get('course_id').get('course_name');\n                                var message = item.get('assignment').get('assignment_name') + ' is due in ' + item.get('reminder').get('time_before');\n                                var reminderId = item.get('id');\n                                var date = item.get('alarm_date_object');\n                                // All notifications have been canceled\n                                window.plugin.notification.local.add({\n                                    id: reminderId,\n                                    date: date,\n                                    message: message,\n                                    title: title\n                                });\n                            });\n                        });\n                    });\n                    clearInterval(cordovaInitiated);\n                }\n            }, 5);\n\n            /*\n             * This is for the back button;\n             */\n\n            goHome = function () {\n                context.transitionToRoute('assignments');\n            };\n\n            setInterval(function () {\n                CustomFunctions.updateAssignments(context);\n                CustomFunctions.updateCourses(context);\n            }, 5000);\n\n            /*\n             *  This updates record on push notifications\n             */\n            window.addEventListener('updatedAssignment', function () {\n                CustomFunctions.updateAssignments(context);\n            });\n\n            /* Move to home course page if first run */\n            var courseList = function courseList(courses) {\n                console.log(courses);\n                if (courses.length < 2) {\n                    context.transitionToRoute('courses');\n                }\n            };\n            CustomFunctions.getSetting('course_list', courseList);\n        }\n    });\n    /**\n     * Created by dan on 2014-05-13.\n     */\n\n    var goHome;\n\n    exports['default'] = ApplicationController;\n\n});","define('whats-due-cordova/controllers/assignments', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var AssignmentsController = Ember['default'].ArrayController.extend({\n        due: (function () {\n            var context = this;\n\n            setTimeout(function () {\n                var total = context.get('totalDue') + context.get('totalOverdue');\n                if (total === 0) {\n                    Ember['default'].$('.nothing-due').removeClass('hidden');\n                    Ember['default'].$('.day-divider').addClass('hidden');\n                } else {\n                    Ember['default'].$('.nothing-due').addClass('hidden');\n                    Ember['default'].$('.day-divider').removeClass('hidden');\n                }\n            }, 5);\n            return this.get('model').filterBy('completed', false).filterBy('archived', false).filterBy('overdue', false).sortBy('due_date');\n        }).property('model.@each.due_date', 'model.@each.completed', 'model.@each.archived'),\n        totalDue: (function () {\n            return this.get('due.length');\n        }).property('model.@each.due_date', 'model.@each.completed', 'model.@each.archived'),\n        totalOverdue: (function () {\n            return this.get('overdue.length');\n        }).property('model.@each.due_date', 'model.@each.completed'),\n        overdue: (function () {\n            return this.get('model').filterBy('completed', false).filterBy('archived', false).filterBy('overdue', true).filterBy('hidden', false).sortBy('due_date');\n        }).property('model.@each.due_date', 'model.@each.completed', 'model.@each.archived'),\n        actions: {\n            removeAssignment: function removeAssignment(assignment) {\n                console.log('removed');\n                CustomFunctions.trackEvent('Assignment Completed');\n                this.store.find('setReminder', { 'assignment': assignment.get('id') }).then(function (setReminders) {\n                    CustomFunctions.removeSetReminders(setReminders);\n                });\n                assignment.set('completed', true);\n                assignment.set('date_completed', Date.now());\n                assignment.save();\n                this.send('invalidateModel');\n            },\n            getLatest: function getLatest() {\n                this.send('invalidateModel');\n            }\n        }\n    });\n\n    exports['default'] = AssignmentsController;\n\n});","define('whats-due-cordova/controllers/completed-assignments', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var CompletedAssignmentsController = Ember['default'].ArrayController.extend({\n        filteredData: (function () {\n            return this.get('model').filterBy('completed', true).sortBy('date_completed');\n        }).property('model.@each.completed'),\n        sortAscending: false,\n        actions: {\n            unRemoveAssignment: function unRemoveAssignment(assignment) {\n                var context = this;\n                this.store.find('reminder').then(function (reminders) {\n                    reminders.get('content').forEach(function (reminder) {\n                        CustomFunctions.setReminder(assignment, reminder, context);\n                    });\n                    assignment.set('completed', false);\n                    assignment.set('date_completed', null);\n                    assignment.set('times_changed', assignment.get('times_changed') + 1);\n                    assignment.save();\n                });\n            }\n        }\n    });\n\n    exports['default'] = CompletedAssignmentsController;\n\n});","define('whats-due-cordova/controllers/courses', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var CoursesController = Ember['default'].ArrayController.extend({\n        model: [],\n        filteredData: (function () {\n            this.set('sortProperties', 'admin_id');\n            return this.get('model').filterBy('enrolled', true).sortBy('admin_id', 'course_name');\n        }).property('model.@each.enrolled'),\n        actions: {\n            addCourse: function addCourse(course_code) {\n                var controller = this;\n                var store = this.store;\n\n                course_code = course_code.toUpperCase();\n                var addCourse = Ember['default'].$('#addCourse');\n                addCourse.find('button').addClass('disabled');\n\n                Ember['default'].$.ajax({\n                    url: CustomFunctions.site() + '/courses/' + course_code,\n                    type: 'GET',\n                    success: function success(resp) {\n                        console.log(resp.course);\n\n                        /*\n                         * Enroll without break old version - rewrite in August 2015\n                         */\n                        Ember['default'].$.ajax({\n                            url: CustomFunctions.site() + '/courses/' + resp.course.id + '/enrolls',\n                            type: 'POST',\n                            data: { 'primaryKey': window.localStorage.getItem('primaryKey') },\n                            success: function success() {\n                                if (!store.hasRecordForId('course', resp.course.id)) {\n                                    store.recordForId('course', resp.course.id).unloadRecord(); // Quirk when deleting and re-adding\n                                    var course = store.createRecord('course', resp.course);\n                                    course.save();\n                                    CustomFunctions.getUpdates('/assignments', 'assignment', {\n                                        'courses': '[' + course.get('id') + ']',\n                                        'sendAll': true\n                                    }, true);\n                                    CustomFunctions.updateCourseList();\n\n                                    controller.set('course_code', '');\n                                }\n                            }\n                        });\n                    },\n                    error: function error(resp) {\n                        console.log(resp);\n                        if (resp.statusText === 'Course Not Found') {\n                            alert('Course Code is Wrong');\n                            addCourse.removeClass('disabled');\n                        } else {\n                            alert('Are you connected to the Internet?');\n                        }\n                    }\n                });\n            },\n            removeCourse: function removeCourse(course) {\n                var context = this;\n                Ember['default'].$.ajax({\n                    url: CustomFunctions.site() + '/courses/' + course.get('id') + '/unenrolls',\n                    type: 'POST',\n                    data: { 'primaryKey': localStorage.getItem('primaryKey') },\n                    success: function success() {\n                        context.store.find('assignment', { 'course_id': course.get('id') }).then(function (assignments) {\n                            assignments.content.forEach(function (assignment) {\n                                this.store.find('setReminder', { 'assignment': assignment.get('id') }).then(function (setReminders) {\n                                    CustomFunctions.removeSetReminders(setReminders);\n                                    console.log('destroyed Reminder');\n                                });\n                                assignment.destroyRecord();\n                                console.log('destroyed Assignment');\n                            }, context);\n                        });\n                        course.destroyRecord().then(function () {\n                            CustomFunctions.updateCourseList();\n                        });\n\n                        CustomFunctions.trackEvent('Course Removed', 'Course Name', course.get('course_name'));\n                    },\n                    error: function error() {\n                        alert('Are you connected to the Internet?');\n                        CustomFunctions.trackEvent('Course Remove Failed');\n                    }\n                });\n            }\n        }\n    });\n\n    exports['default'] = CoursesController;\n\n});","define('whats-due-cordova/controllers/reminders', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var RemindersController = Ember['default'].Controller.extend({\n        init: function init() {},\n        actions: {\n            add: function add() {\n                var newReminders = Ember['default'].$('#new-reminder');\n                var time = parseInt(newReminders.find('.time').val());\n                var context = this;\n                if (time > 0 && this.get('model.length') < 3) {\n                    var timeFrame = newReminders.find('.time-frame').val();\n                    var seconds = 0;\n                    if (timeFrame === 'days') {\n                        seconds = time * 86400;\n                    } else if (timeFrame = 'hours') {\n                        seconds = time * 3600;\n                    }\n                    /* Prevent Duplicates */\n                    this.store.find('reminder', { seconds_before: seconds }).then(function () {\n                        if (cordovaLoaded) {\n                            navigator.notification.alert('This reminder is already set', // message\n                            null, // callback\n                            'Duplicate Reminer', // title\n                            'OK' // buttonName\n                            );\n                        } else {\n                            alert('Duplicate');\n                        }\n                    }, function () {\n                        // on rejection\n                        var reminder = context.store.createRecord('reminder', {\n                            id: CustomFunctions.primaryKey('reminders'),\n                            seconds_before: seconds\n                        });\n                        reminder.save().then(CustomUI.putBackable());\n                        Ember['default'].$('input').val('');\n                        context.store.find('assignment', { completed: false }).then(function (assignments) {\n                            assignments.get('content').forEach(function (assignment) {\n                                CustomFunctions.setReminder(assignment, reminder, context);\n                            });\n                        });\n                    });\n                }\n\n                /* Fix Keyboard */\n                if (cordovaLoaded === true) {\n                    setTimeout(function () {\n                        cordova.plugins.Keyboard.close();\n                        Ember['default'].$('input').blur();\n                    }, 1);\n                }\n            },\n            remove: function remove(reminder) {\n                console.log(reminder);\n                this.store.find('setReminder', { 'reminder': reminder.get('id') }).then(function (setReminders) {\n                    CustomFunctions.removeSetReminders(setReminders);\n                    reminder.destroyRecord();\n                }, function () {\n                    reminder.destroyRecord();\n                });\n            }\n        },\n        totalRecords: (function () {\n            return this.get('model.length');\n        }).property('model.@each'),\n        maxxedOut: (function () {\n            return this.get('model.length') >= 3;\n        }).property('model.@each'),\n        empty: (function () {\n            return this.get('model.length') === 0;\n        }).property('model.@each')\n    });\n\n    exports['default'] = RemindersController;\n\n});","define('whats-due-cordova/helpers/assignment-divider', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    /**\n     * Created by Dan on 4/29/15.\n     */\n    var dueDays = [];\n    var assignmentCount = 0;\n    exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (daysAway, totalDue) {\n        assignmentCount++;\n        var count = CustomFunctions.countInArray(dueDays, daysAway);\n        dueDays.push(daysAway);\n\n        if (totalDue === assignmentCount) {\n            assignmentCount = 0;\n            dueDays = [];\n        }\n\n        var escaped = Ember['default'].Handlebars.Utils.escapeExpression(daysAway);\n        if (count === 0) {\n            return new Ember['default'].Handlebars.SafeString('<div class=\"day-divider\">' + escaped + '</div>');\n        }\n    });\n\n});","define('whats-due-cordova/helpers/icon-device', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    /**\n     * Created by Dan on 4/29/15.\n     */\n    exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (name, classes, id) {\n        name = Ember['default'].Handlebars.Utils.escapeExpression(name);\n        id = Ember['default'].Handlebars.Utils.escapeExpression(id);\n        classes = Ember['default'].Handlebars.Utils.escapeExpression(classes);\n        return new Ember['default'].Handlebars.SafeString('<img src=\"assets/icons/ios/' + name + '.png\" id=\"' + id + '\" class=\"' + classes + '\"/>');\n    });\n\n});","define('whats-due-cordova/helpers/linkify-descriptions', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    /**\n     * Created by Dan on 4/30/15.\n     */\n    exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (text) {\n        if (typeof text === \"undefined\") {\n            return Ember['default'].String.htmlSafe(\"\");\n        } else {\n            var options = {\n                callback: function callback(text, href) {\n                    /* Make it open in the default browser */\n                    var defaultBrowser = \"onclick=\\\"window.open('\" + href + \"', '_system')\\\"\";\n                    return href ? \"<span class=\\\"link\\\"\" + defaultBrowser + \" >\" + text + \"</a>\" : text;\n                }\n            };\n            return Ember['default'].String.htmlSafe(linkify(text, options));\n        }\n    });\n\n});","define('whats-due-cordova/initializers/app-version', ['exports', 'whats-due-cordova/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('whats-due-cordova/initializers/ember-cli-fastclick', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var EmberCliFastclickInitializer = {\n    name: 'fastclick',\n\n    initialize: function initialize() {\n      Ember['default'].run.schedule('afterRender', function () {\n        FastClick.attach(document.body);\n      });\n    }\n  };\n\n  exports['default'] = EmberCliFastclickInitializer;\n\n});","define('whats-due-cordova/initializers/export-application-global', ['exports', 'ember', 'whats-due-cordova/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('whats-due-cordova/models/assignment', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    var Assignment = DS['default'].Model.extend({\n        assignment_name: DS['default'].attr('string'),\n        description: DS['default'].attr('string', { defaultValue: ' ' }),\n        created_at: DS['default'].attr('number'),\n        due_date: DS['default'].attr('string'),\n        last_modified: DS['default'].attr('number'),\n        archived: DS['default'].attr('boolean'),\n        last_updated: DS['default'].attr('number', { defaultValue: null }),\n        date_completed: DS['default'].attr('number', { defaultValue: null }),\n        enrolled: DS['default'].attr('boolean', { defaultValue: true }),\n        completed: DS['default'].attr('boolean', { defaultValue: false }),\n        course_id: DS['default'].belongsTo('course', { async: true }),\n        set_reminders: DS['default'].hasMany('setReminders'),\n        overdue: (function () {\n            return moment().isAfter(this.get('due_date'));\n        }).property('due_date'),\n        hidden: (function () {\n            return moment(this.get('due_date')).isBefore(moment().add(-3, 'days'));\n        }).property('due_date'),\n        daysAway: (function () {\n            return moment(this.get('due_date')).calendar();\n        }).property('due_date'),\n        timeDue: (function () {\n            return moment(this.get('due_date')).format('h:mm A');\n        }).property('due_date'),\n        fromNow: (function () {\n            return moment(this.get('due_date')).fromNow();\n        }).property('due_date'),\n        urgencyLabel: (function () {\n            var now = moment();\n            var gap = moment(this.get('due_date'));\n            gap = gap.diff(now, 'hours');\n            if (gap <= 24 && gap >= 1) {\n                return 'orange';\n            } else if (gap <= 0) {\n                return 'red';\n            } else {\n                return 'white';\n            }\n        }).property('due_date')\n    });\n\n    exports['default'] = Assignment;\n\n});","define('whats-due-cordova/models/course', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    var Course = DS['default'].Model.extend({\n        course_name: DS['default'].attr('string'),\n        course_code: DS['default'].attr('string'),\n        instructor_name: DS['default'].attr('string'),\n        admin_id: DS['default'].attr('string'),\n        last_modified: DS['default'].attr('number'),\n        created_at: DS['default'].attr('number'),\n        school_name: DS['default'].attr('string', { defaultValue: 'IDC Herzliya' }),\n        enrolled: DS['default'].attr('boolean', { defaultValue: true }),\n        archived: DS['default'].attr('boolean', { defaultValue: false }),\n        assignments: DS['default'].hasMany('assignment'),\n        hidden: (function () {\n            if (this.get('archived') === true) {\n                return 'hidden';\n            } else {\n                return ' ';\n            }\n        }).property('archived')\n    });\n\n    exports['default'] = Course;\n\n});","define('whats-due-cordova/models/message', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    var Message = DS['default'].Model.extend({\n        username: DS['default'].attr('string'),\n        body: DS['default'].attr('string'),\n        updated_at: DS['default'].attr('number'),\n        course_id: DS['default'].belongsTo('course', { async: true }),\n        date: (function () {\n            return moment(this.get('updated_at'), 'X').format('MMM Do, hh:mm A');\n        }).property('updated_at')\n    });\n\n    exports['default'] = Message;\n\n});","define('whats-due-cordova/models/reminder', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    var Reminder = DS['default'].Model.extend({\n        seconds_before: DS['default'].attr('number'),\n        set_reminders: DS['default'].hasMany('setReminders'),\n        time_before: (function () {\n            var timeAgo = moment().format('X') - this.get('seconds_before');\n            return moment(timeAgo, 'X').fromNow();\n        }).property('seconds_before')\n    });\n\n    exports['default'] = Reminder;\n\n});","define('whats-due-cordova/models/set-reminder', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    var SetReminder = DS['default'].Model.extend({\n        alarm_date: DS['default'].attr('string'),\n        assignment: DS['default'].belongsTo('assignment'),\n        reminder: DS['default'].belongsTo('reminder'),\n        alarm_date_object: (function () {\n            return new Date(this.get('alarm_date'));\n        }).property('alarm_date'),\n        future: (function () {\n            return moment(this.get('alarm_date_object')).isAfter();\n        }).property('alarm_date'),\n        timestamp: (function () {\n            return moment(this.get('alarm_date_object')).format('X');\n        }).property('alarm_date')\n    });\n\n    exports['default'] = SetReminder;\n\n});","define('whats-due-cordova/models/setting', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  /**\n   * Created by Dan on 5/11/15.\n   */\n\n  /* Settings */\n  var Setting = DS['default'].Model.extend({\n    value: DS['default'].attr('string', { defaultValue: null })\n  });\n\n  exports['default'] = Setting;\n\n});","define('whats-due-cordova/objects/pollster', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    /**\n     * Created by Dan on 4/30/15.\n     */\n\n    var Pollster = Ember['default'].Object.extend({\n        start: function start() {\n            this.timer = setInterval(this.onPoll, 5000);\n        },\n        stop: function stop() {\n            clearInterval(this.timer);\n        },\n        onPoll: function onPoll() {}\n    });\n\n    exports['default'] = Pollster;\n\n    // This gets defined when its called\n\n});","define('whats-due-cordova/router', ['exports', 'ember', 'whats-due-cordova/config/environment'], function (exports, Ember, config) {\n\n    'use strict';\n\n    var Router = Ember['default'].Router.extend({\n        location: config['default'].locationType\n    });\n\n    exports['default'] = Router.map(function () {\n        this.resource('courses', function () {});\n\n        this.resource('assignments', { path: '/' }, function () {});\n\n        this.resource('completedAssignments', function () {});\n\n        this.resource('support', function () {});\n\n        this.resource('messages', function () {});\n\n        this.resource('reminders', function () {});\n\n        this.resource('welcome', function () {});\n    });\n\n});","define('whats-due-cordova/routes/assignments', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var AssignmentsRoute = Ember['default'].Route.extend({\n        model: function model() {\n            //CustomFunctions.updateAssignments(this);\n            CustomUI.setTitle('Assignments Due');\n            return this.store.find('assignment');\n        },\n        actions: {\n            invalidateModel: function invalidateModel() {\n                console.log('invalidated');\n                CustomUI.swipeRemove();\n                this.refresh();\n            }\n        },\n        afterModel: function afterModel() {}\n    });\n\n    exports['default'] = AssignmentsRoute;\n\n});","define('whats-due-cordova/routes/completed-assignments', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var CompletedAssignmentsRoute = Ember['default'].Route.extend({\n        model: function model() {\n            CustomFunctions.updateAssignments(this);\n            CustomUI.setTitle('Recently Completed');\n            return this.store.find('assignment');\n        },\n        afterModel: function afterModel() {\n            CustomUI.putBackable();\n        }\n    });\n\n    exports['default'] = CompletedAssignmentsRoute;\n\n});","define('whats-due-cordova/routes/courses', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var CoursesRoute = Ember['default'].Route.extend({\n        model: function model() {\n            CustomUI.setTitle('My Courses');\n            return this.store.find('course');\n        }\n    });\n\n    exports['default'] = CoursesRoute;\n\n});","define('whats-due-cordova/routes/messages', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var MessagesRoute = Ember['default'].Route.extend({\n        model: function model() {\n            return this.store.find('message');\n        }\n    });\n\n    exports['default'] = MessagesRoute;\n\n});","define('whats-due-cordova/routes/reminders', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var RemindersRoute = Ember['default'].Route.extend({\n        model: function model() {\n            CustomUI.setTitle('Reminders');\n            this.store.find('setReminder');\n            return this.store.find('reminder');\n        }\n    });\n\n    exports['default'] = RemindersRoute;\n\n});","define('whats-due-cordova/routes/support', ['exports', 'ember', 'customUI'], function (exports, Ember, CustomUI) {\n\n    'use strict';\n\n    var SupportRoute = Ember['default'].Route.extend({\n        model: function model() {\n            CustomUI['default'].setTitle('Support');\n        }\n    });\n\n    exports['default'] = SupportRoute;\n\n});","define('whats-due-cordova/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          var el2 = dom.createTextNode(\"\\n                        What's Due\\n                    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"span class=\\\"whatsdue count\\\"></span\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          inline(env, morph0, context, \"icon-device\", [\"assignments\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          var el2 = dom.createTextNode(\"\\n                        Completed\\n                    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          inline(env, morph0, context, \"icon-device\", [\"completed\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          var el2 = dom.createTextNode(\"\\n                        My Courses\\n                    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          inline(env, morph0, context, \"icon-device\", [\"courses\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          var el2 = dom.createTextNode(\"\\n                        Reminders\\n                    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          inline(env, morph0, context, \"icon-device\", [\"reminders\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child4 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          var el2 = dom.createTextNode(\"\\n                        Feedback & Support\\n                    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          inline(env, morph0, context, \"icon-device\", [\"info\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"header\");\n        dom.setAttribute(el1,\"id\",\"appHeader\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h1\");\n        dom.setAttribute(el2,\"id\",\"page-title\");\n        var el3 = dom.createTextNode(\"\\n        Assignments Due\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"content\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"id\",\"contentContainer\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"id\",\"left\");\n        dom.setAttribute(el3,\"class\",\"fastAnimate\");\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"id\",\"menu\");\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"ul\");\n        dom.setAttribute(el5,\"id\",\"leftMenu\");\n        var el6 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \\n\\n\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"id\",\"middle\");\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"id\",\"right\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"welcome\");\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"share-modal\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h3\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        dom.setAttribute(el3,\"class\",\"assignment-name\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"buttons\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"button share\");\n        var el4 = dom.createTextNode(\"\\n            Share\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"button close\");\n        var el4 = dom.createTextNode(\"\\n            Cancel\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"input\");\n        dom.setAttribute(el2,\"type\",\"hidden\");\n        dom.setAttribute(el2,\"class\",\"message\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, inline = hooks.inline, element = hooks.element, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [5]);\n        var element2 = dom.childAt(fragment, [2, 1]);\n        var element3 = dom.childAt(element2, [1, 1, 1]);\n        var morph0 = dom.createMorphAt(element0,1,1);\n        var morph1 = dom.createMorphAt(element0,3,3);\n        var morph2 = dom.createMorphAt(element3,1,1);\n        var morph3 = dom.createMorphAt(element3,3,3);\n        var morph4 = dom.createMorphAt(element3,5,5);\n        var morph5 = dom.createMorphAt(element3,7,7);\n        var morph6 = dom.createMorphAt(element3,9,9);\n        var morph7 = dom.createMorphAt(dom.childAt(element2, [3]),1,1);\n        inline(env, morph0, context, \"icon-device\", [\"menu\", \"pull-left\", \"menuToggle\"], {});\n        inline(env, morph1, context, \"icon-device\", [\"menu\", \"pull-right hide\", \"menuToggle\"], {});\n        element(env, element1, context, \"action\", [\"test\"], {});\n        block(env, morph2, context, \"link-to\", [\"assignments\"], {\"tagName\": \"li\"}, child0, null);\n        block(env, morph3, context, \"link-to\", [\"completedAssignments\"], {\"tagName\": \"li\"}, child1, null);\n        block(env, morph4, context, \"link-to\", [\"courses\"], {\"tagName\": \"li\"}, child2, null);\n        block(env, morph5, context, \"link-to\", [\"reminders\"], {\"tagName\": \"li\"}, child3, null);\n        block(env, morph6, context, \"link-to\", [\"support\"], {\"tagName\": \"li\"}, child4, null);\n        content(env, morph7, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('whats-due-cordova/templates/assignments', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"reveal\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          var el3 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"time\");\n          var el4 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"span\");\n          dom.setAttribute(el4,\"class\",\"from-now\");\n          var el5 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\" ago\\n                        \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"span\");\n          dom.setAttribute(el4,\"class\",\"time-due\");\n          var el5 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"course\");\n          var el5 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"info\");\n          var el4 = dom.createTextNode(\"\\n\\n                        \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"title\");\n          var el5 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"description\");\n          var el5 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n\\n                    \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n\\n                \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element5 = dom.childAt(fragment, [3]);\n          var element6 = dom.childAt(element5, [1]);\n          var element7 = dom.childAt(element5, [3]);\n          var element8 = dom.childAt(element7, [1]);\n          var element9 = dom.childAt(element7, [3]);\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(dom.childAt(element8, [1]),1,1);\n          var morph2 = dom.createMorphAt(dom.childAt(element8, [3]),1,1);\n          var morph3 = dom.createMorphAt(dom.childAt(element8, [5]),1,1);\n          var morph4 = dom.createMorphAt(dom.childAt(element9, [1]),1,1);\n          var morph5 = dom.createMorphAt(dom.childAt(element9, [3]),1,1);\n          var morph6 = dom.createMorphAt(element7,5,5);\n          inline(env, morph0, context, \"assignment-divider\", [get(env, context, \"assignment.daysAway\"), get(env, context, \"totalDue\")], {});\n          element(env, element5, context, \"bind-attr\", [], {\"class\": \":slider :left-box\"});\n          element(env, element6, context, \"action\", [\"removeAssignment\", get(env, context, \"assignment\")], {});\n          element(env, element7, context, \"bind-attr\", [], {\"class\": \":removable assignment.urgencyLabel\"});\n          content(env, morph1, context, \"assignment.fromNow\");\n          content(env, morph2, context, \"assignment.timeDue\");\n          content(env, morph3, context, \"assignment.course_id.course_name\");\n          content(env, morph4, context, \"assignment.assignment_name\");\n          inline(env, morph5, context, \"linkify-descriptions\", [get(env, context, \"assignment.description\")], {});\n          inline(env, morph6, context, \"input\", [], {\"class\": \"date-due\", \"type\": \"hidden\", \"value\": get(env, context, \"assignment.daysAway\")});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"reveal\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          var el3 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"time\");\n          var el4 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"span\");\n          dom.setAttribute(el4,\"class\",\"from-now\");\n          var el5 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"span\");\n          dom.setAttribute(el4,\"class\",\"time-due\");\n          var el5 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"course\");\n          var el5 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"info\");\n          var el4 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"title\");\n          var el5 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"description\");\n          var el5 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element, get = hooks.get, content = hooks.content, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var element1 = dom.childAt(element0, [1]);\n          var element2 = dom.childAt(element0, [3]);\n          var element3 = dom.childAt(element2, [1]);\n          var element4 = dom.childAt(element2, [3]);\n          var morph0 = dom.createMorphAt(dom.childAt(element3, [1]),1,1);\n          var morph1 = dom.createMorphAt(dom.childAt(element3, [3]),1,1);\n          var morph2 = dom.createMorphAt(dom.childAt(element3, [5]),1,1);\n          var morph3 = dom.createMorphAt(dom.childAt(element4, [1]),1,1);\n          var morph4 = dom.createMorphAt(dom.childAt(element4, [3]),1,1);\n          element(env, element0, context, \"bind-attr\", [], {\"class\": \":slider :left-box assignment.hidden\"});\n          element(env, element1, context, \"action\", [\"removeAssignment\", get(env, context, \"assignment\")], {});\n          element(env, element2, context, \"bind-attr\", [], {\"class\": \":removable :red assignment.urgencyLabel\"});\n          content(env, morph0, context, \"assignment.fromNow\");\n          content(env, morph1, context, \"assignment.fromNow\");\n          content(env, morph2, context, \"assignment.course_id.course_name\");\n          content(env, morph3, context, \"assignment.assignment_name\");\n          inline(env, morph4, context, \"linkify-descriptions\", [get(env, context, \"assignment.description\")], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"newAssignments\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"nav\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"due\");\n        var el4 = dom.createTextNode(\"\\n            What's Due\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"badge square black\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"vertical-seperator white\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"overdue\");\n        var el4 = dom.createTextNode(\"\\n            Overdue\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"badge square black\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"id\",\"assignments-due\");\n        dom.setAttribute(el2,\"class\",\"needsclick\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"arrow-up\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"id\",\"assignments-overdue\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"arrow-up\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"day-divider\");\n        var el4 = dom.createTextNode(\"\\n            Overdue\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"static-content nothing-due hidden\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"img\");\n        dom.setAttribute(el3,\"src\",\"assets/img/thumbs-up.png\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h2\");\n        dom.setAttribute(el3,\"class\",\"centered\");\n        var el4 = dom.createTextNode(\"\\n            Looks like you've got nothing due\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element10 = dom.childAt(fragment, [0]);\n        var element11 = dom.childAt(element10, [1]);\n        var element12 = dom.childAt(element10, [3]);\n        var morph0 = dom.createMorphAt(dom.childAt(element11, [1, 1]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element11, [5, 1]),1,1);\n        var morph2 = dom.createMorphAt(element12,1,1);\n        var morph3 = dom.createMorphAt(element12,5,5);\n        var morph4 = dom.createMorphAt(dom.childAt(element10, [5]),5,5);\n        content(env, morph0, context, \"totalDue\");\n        content(env, morph1, context, \"totalOverdue\");\n        content(env, morph2, context, \"firstOfDay\");\n        block(env, morph3, context, \"each\", [get(env, context, \"due\")], {\"keyword\": \"assignment\"}, child0, null);\n        block(env, morph4, context, \"each\", [get(env, context, \"overdue\")], {\"keyword\": \"assignment\"}, child1, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('whats-due-cordova/templates/completed-assignments', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"slider\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"reveal\");\n          var el3 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"full\");\n          var el4 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"span\");\n          dom.setAttribute(el4,\"class\",\"helper\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"putBackable fastAnimate\");\n          var el3 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"info\");\n          var el4 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"title\");\n          var el5 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n\\n                    \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"course\");\n          var el5 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var element1 = dom.childAt(element0, [1]);\n          var element2 = dom.childAt(element0, [3, 1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element1, [1]),3,3);\n          var morph1 = dom.createMorphAt(dom.childAt(element2, [1]),1,1);\n          var morph2 = dom.createMorphAt(element2,3,3);\n          var morph3 = dom.createMorphAt(dom.childAt(element2, [5]),1,1);\n          element(env, element1, context, \"action\", [\"unRemoveAssignment\", get(env, context, \"assignment\")], {});\n          inline(env, morph0, context, \"icon-device\", [\"back\"], {});\n          content(env, morph1, context, \"assignment.assignment_name\");\n          inline(env, morph2, context, \"icon-device\", [\"minus-red\"], {});\n          content(env, morph3, context, \"assignment.course_id.course_name\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"completedAssignments\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"assignments-list\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 1]),1,1);\n        block(env, morph0, context, \"each\", [get(env, context, \"filteredData\")], {\"keyword\": \"assignment\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('whats-due-cordova/templates/courses', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"slider left-box\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"reveal\");\n          var el3 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"putBackable fastAnimate\");\n          var el3 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"info\");\n          var el4 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n\\n                    \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"courseName\");\n          var el5 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n\\n                    \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"instructorName\");\n          var el5 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var element1 = dom.childAt(element0, [1]);\n          var element2 = dom.childAt(element0, [3, 1]);\n          var morph0 = dom.createMorphAt(element1,1,1);\n          var morph1 = dom.createMorphAt(element2,1,1);\n          var morph2 = dom.createMorphAt(dom.childAt(element2, [3]),1,1);\n          var morph3 = dom.createMorphAt(dom.childAt(element2, [5]),1,1);\n          element(env, element1, context, \"action\", [\"removeCourse\", get(env, context, \"course\")], {});\n          inline(env, morph0, context, \"icon-device\", [\"X\"], {});\n          inline(env, morph1, context, \"icon-device\", [\"minus-red\"], {});\n          content(env, morph2, context, \"course.course_name\");\n          content(env, morph3, context, \"course.instructor_name\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"courses\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"<div class=\\\"add-something\\\">\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"<img src=\\\"assets/icons/ios/plus-big.png\\\" {{action 'addCourse'}}>\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"Add a Course\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"</div>\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"id\",\"addCourse\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"disabled\",\"\");\n        dom.setAttribute(el3,\"class\",\"disabled fastAnimate\");\n        var el4 = dom.createTextNode(\"Join\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        dom.setAttribute(el2,\"class\",\"triangle-isosceles topleft hidden bubble\");\n        var el3 = dom.createTextNode(\"\\n        Enter your unique class code to join\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        If you don't have one, ask your teacher\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, element = hooks.element, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element3 = dom.childAt(fragment, [0]);\n        var element4 = dom.childAt(element3, [11]);\n        var element5 = dom.childAt(element4, [1]);\n        var morph0 = dom.createMorphAt(element3,1,1);\n        var morph1 = dom.createMorphAt(element4,3,3);\n        block(env, morph0, context, \"each\", [get(env, context, \"filteredData\")], {\"keyword\": \"course\"}, child0, null);\n        element(env, element5, context, \"action\", [\"addCourse\", get(env, context, \"course_code\")], {});\n        inline(env, morph1, context, \"input\", [], {\"type\": \"text\", \"value\": get(env, context, \"course_code\"), \"maxlength\": \"6\", \"placeholder\": \"Course Code\", \"class\": \"search\", \"autocomplete\": \"off\", \"autocorrect\": \"off\", \"autocapitalize\": \"off\", \"spellcheck\": \"false\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('whats-due-cordova/templates/messages', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"message\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"header\");\n          var el3 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"span\");\n          dom.setAttribute(el3,\"class\",\"pull-left\");\n          var el4 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"span\");\n          dom.setAttribute(el3,\"class\",\"pull-right\");\n          var el4 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"article\");\n          var el3 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var element1 = dom.childAt(element0, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element1, [1]),1,1);\n          var morph1 = dom.createMorphAt(dom.childAt(element1, [3]),1,1);\n          var morph2 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n          content(env, morph0, context, \"message.course_id.course_name\");\n          content(env, morph1, context, \"message.date\");\n          content(env, morph2, context, \"message.body\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"messages\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        block(env, morph0, context, \"each\", [get(env, context, \"controller\")], {\"keyword\": \"message\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('whats-due-cordova/templates/reminders', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h3\");\n          var el2 = dom.createTextNode(\"\\n             My Reminders ( \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" of 3 )\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          content(env, morph0, context, \"totalRecords\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"reveal\");\n          var el3 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"span\");\n          dom.setAttribute(el3,\"class\",\"helper\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"putBackable fastAnimate\");\n          var el3 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n\\n                \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"p\");\n          var el4 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\" before each item\\n                \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [1]);\n          var element2 = dom.childAt(element1, [1]);\n          var element3 = dom.childAt(element1, [3]);\n          var morph0 = dom.createMorphAt(element2,3,3);\n          var morph1 = dom.createMorphAt(element3,1,1);\n          var morph2 = dom.createMorphAt(dom.childAt(element3, [3]),1,1);\n          element(env, element2, context, \"action\", [\"remove\", get(env, context, \"reminder\")], {});\n          inline(env, morph0, context, \"icon-device\", [\"X\"], {});\n          inline(env, morph1, context, \"icon-device\", [\"minus-red\"], {});\n          content(env, morph2, context, \"reminder.time_before\");\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h3\");\n          var el2 = dom.createTextNode(\"\\n                Add Reminder\\n            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"figure\");\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"form\");\n          var el2 = dom.createTextNode(\"\\n                Remind me\\n                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"input\");\n          dom.setAttribute(el2,\"class\",\"time\");\n          dom.setAttribute(el2,\"type\",\"tel\");\n          dom.setAttribute(el2,\"step\",\"1\");\n          dom.setAttribute(el2,\"placeholder\",\"0\");\n          dom.setAttribute(el2,\"max\",\"30\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"select\");\n          dom.setAttribute(el2,\"class\",\"time-frame\");\n          var el3 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"option\");\n          dom.setAttribute(el3,\"value\",\"hours\");\n          var el4 = dom.createTextNode(\"hour(s)\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"option\");\n          dom.setAttribute(el3,\"value\",\"days\");\n          var el4 = dom.createTextNode(\"day(s)\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                before everything is due.\\n            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [3]);\n          var morph0 = dom.createMorphAt(element0,1,1);\n          element(env, element0, context, \"action\", [\"add\"], {});\n          inline(env, morph0, context, \"icon-device\", [\"plus-big\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h3\");\n          var el2 = dom.createTextNode(\"\\n                Remove a reminder to add another\\n            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"reminders\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"id\",\"new-reminder\");\n        var el3 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        dom.setAttribute(el2,\"class\",\"triangle-isosceles topleft hidden bubble\");\n        var el3 = dom.createTextNode(\"\\n        Choose how many hours or days you want to be reminded before each due date\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element4 = dom.childAt(fragment, [0]);\n        var element5 = dom.childAt(element4, [7]);\n        var morph0 = dom.createMorphAt(element4,1,1);\n        var morph1 = dom.createMorphAt(element4,3,3);\n        var morph2 = dom.createMorphAt(dom.childAt(element4, [5]),1,1);\n        var morph3 = dom.createMorphAt(element5,1,1);\n        var morph4 = dom.createMorphAt(element5,3,3);\n        block(env, morph0, context, \"unless\", [get(env, context, \"empty\")], {}, child0, null);\n        inline(env, morph1, context, \"input\", [], {\"type\": \"hidden\", \"value\": get(env, context, \"total\"), \"id\": \"total-reminders\"});\n        block(env, morph2, context, \"each\", [get(env, context, \"model\")], {\"keyword\": \"reminder\"}, child1, null);\n        block(env, morph3, context, \"unless\", [get(env, context, \"maxxedOut\")], {}, child2, null);\n        block(env, morph4, context, \"if\", [get(env, context, \"maxxedOut\")], {}, child3, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('whats-due-cordova/templates/support', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"support\");\n        dom.setAttribute(el1,\"class\",\"static-content\");\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('whats-due-cordova/tests/adapter-temp/assignment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapter-temp');\n  test('adapter-temp/assignment.js should pass jshint', function() { \n    ok(true, 'adapter-temp/assignment.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/adapter-temp/course.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapter-temp');\n  test('adapter-temp/course.js should pass jshint', function() { \n    ok(true, 'adapter-temp/course.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/adapter-temp/reminder.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapter-temp');\n  test('adapter-temp/reminder.js should pass jshint', function() { \n    ok(true, 'adapter-temp/reminder.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/components/course-profile.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/course-profile.js should pass jshint', function() { \n    ok(true, 'components/course-profile.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/application.js should pass jshint', function() { \n    ok(true, 'controllers/application.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/controllers/assignments.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/assignments.js should pass jshint', function() { \n    ok(true, 'controllers/assignments.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/controllers/completed-assignments.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/completed-assignments.js should pass jshint', function() { \n    ok(true, 'controllers/completed-assignments.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/controllers/courses.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/courses.js should pass jshint', function() { \n    ok(true, 'controllers/courses.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/controllers/reminders.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/reminders.js should pass jshint', function() { \n    ok(true, 'controllers/reminders.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/helpers/assignment-divider.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/assignment-divider.js should pass jshint', function() { \n    ok(true, 'helpers/assignment-divider.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/helpers/icon-device.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/icon-device.js should pass jshint', function() { \n    ok(true, 'helpers/icon-device.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/helpers/linkify-descriptions.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/linkify-descriptions.js should pass jshint', function() { \n    ok(true, 'helpers/linkify-descriptions.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/helpers/resolver', ['exports', 'ember/resolver', 'whats-due-cordova/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('whats-due-cordova/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/helpers/start-app', ['exports', 'ember', 'whats-due-cordova/app', 'whats-due-cordova/router', 'whats-due-cordova/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('whats-due-cordova/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/models/assignment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/assignment.js should pass jshint', function() { \n    ok(true, 'models/assignment.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/models/course.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/course.js should pass jshint', function() { \n    ok(true, 'models/course.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/models/message.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/message.js should pass jshint', function() { \n    ok(true, 'models/message.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/models/reminder.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/reminder.js should pass jshint', function() { \n    ok(true, 'models/reminder.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/models/set-reminder.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/set-reminder.js should pass jshint', function() { \n    ok(true, 'models/set-reminder.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/models/setting.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/setting.js should pass jshint', function() { \n    ok(true, 'models/setting.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/objects/pollster.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - objects');\n  test('objects/pollster.js should pass jshint', function() { \n    ok(true, 'objects/pollster.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/routes/assignments.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/assignments.js should pass jshint', function() { \n    ok(true, 'routes/assignments.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/routes/completed-assignments.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/completed-assignments.js should pass jshint', function() { \n    ok(true, 'routes/completed-assignments.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/routes/courses.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/courses.js should pass jshint', function() { \n    ok(true, 'routes/courses.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/routes/messages.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/messages.js should pass jshint', function() { \n    ok(true, 'routes/messages.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/routes/reminders.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/reminders.js should pass jshint', function() { \n    ok(true, 'routes/reminders.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/routes/support.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/support.js should pass jshint', function() { \n    ok(true, 'routes/support.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/test-helper', ['whats-due-cordova/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('whats-due-cordova/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/views/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/application.js should pass jshint', function() { \n    ok(true, 'views/application.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/views/assignments.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/assignments.js should pass jshint', function() { \n    ok(true, 'views/assignments.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/views/completed-assignments.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/completed-assignments.js should pass jshint', function() { \n    ok(true, 'views/completed-assignments.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/views/courses.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/courses.js should pass jshint', function() { \n    ok(true, 'views/courses.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/views/reminders.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/reminders.js should pass jshint', function() { \n    ok(true, 'views/reminders.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/tests/views/support.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/support.js should pass jshint', function() { \n    ok(true, 'views/support.js should pass jshint.'); \n  });\n\n});","define('whats-due-cordova/views/application', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var ApplicationView = Ember['default'].View.extend({\n        didInsertElement: function didInsertElement() {\n            CustomUI.readyFunction();\n        }\n    });\n\n    exports['default'] = ApplicationView;\n\n});","define('whats-due-cordova/views/assignments', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var AssignmentsView = Ember['default'].View.extend({\n        contentDidChange: (function () {\n            CustomUI.swipeRemove();\n        }).observes('controller.filteredData'),\n        afterRender: function afterRender() {\n            CustomUI.swipeRemove();\n        },\n        hammerOptions: {},\n        activeElement: null,\n        gestures: {\n            drag: function drag(event) {\n                // do something like send an event down the controller/route chain\n                var x = event.gesture.deltaX;\n                var y = event.gesture.deltaY;\n                if (x > y * 2) {\n                    var percent = 1 - Math.abs(x / pageWidth);\n                    this.activeElement.css({\n                        '-webkit-transform': 'translate3d(' + x + 'px,0,0) scale3d(1,1,1)',\n                        'opacity': percent\n                    });\n                }\n                return false; // return `false` to stop bubbling\n            },\n            release: function release(event) {\n                // do something like send an event down the controller/route chain\n                console.log(this.activeElement);\n                var deltaX = event.gesture.deltaX;\n                var percent = Math.abs(deltaX / pageWidth);\n                var swiped = percent > 0.3;\n                var direction = event.gesture.direction;\n                console.log(percent);\n                ///* Prevent wonky scrolling */\n                if (!swiped) {\n                    console.log('Reset');\n                    CustomUI.fastAnimate(this.activeElement);\n                    CustomUI.customAnimate(this.activeElement, percent * 750);\n                    this.activeElement.css({\n                        '-webkit-transform': 'translate3d(0,0,0) scale3d(1,1,1)',\n                        'opacity': 1\n                    });\n                } else {\n                    CustomUI.complete(this.activeElement, (1 - percent) * 250);\n                    var position;\n                    if (direction === 'left') {\n                        position = '-100%';\n                    } else if (direction === 'right') {\n                        position = '100%';\n                    }\n                    this.activeElement.css({\n                        '-webkit-transform': 'translate3d(' + position + ',0,0) scale3d(1,1,1)',\n                        'opacity': 0\n                    });\n                }\n                return false; // return `false` to stop bubbling\n            },\n            touch: function touch(event) {\n                this.activeElement = CustomUI.closest(event, '.removable');\n            }\n        }\n    });\n\n    exports['default'] = AssignmentsView;\n\n});","define('whats-due-cordova/views/completed-assignments', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var CompletedAssignmentsView = Ember['default'].View.extend({\n        contentDidChange: (function () {\n            CustomUI.putBackable();\n        }).observes('controller.filteredData')\n    });\n\n    exports['default'] = CompletedAssignmentsView;\n\n});","define('whats-due-cordova/views/courses', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var EnrolledView = Ember['default'].View.extend({\n        contentDidChange: (function () {\n            CustomUI.putBackable();\n            console.log('loaded');\n        }).observes('controller.filteredData'),\n        afterRender: function afterRender() {\n            CustomUI.makeSpinnable();\n            var addCourse = Ember['default'].$('#addCourse');\n            addCourse.find('input').val('');\n            CustomUI.putBackable();\n        }\n    });\n\n    exports['default'] = EnrolledView;\n\n});","define('whats-due-cordova/views/reminders', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var RemindersView = Ember['default'].View.extend({\n        contentDidChange: (function () {\n            CustomUI.putBackable();\n        }).observes('controller.model'),\n        afterRender: function afterRender() {\n            setTimeout(function () {\n                CustomUI.putBackable();\n                CustomUI.reminderTips();\n            }, 50);\n        }\n\n    });\n\n    exports['default'] = RemindersView;\n\n});","define('whats-due-cordova/views/support', ['exports', 'ember', 'customUI'], function (exports, Ember, CustomUI) {\n\n    'use strict';\n\n    var SupportView = Ember['default'].View.extend({\n        afterRender: function afterRender() {\n            setTimeout(function () {\n                CustomUI['default'].showSupport();\n            }, 50);\n        }\n    });\n\n    exports['default'] = SupportView;\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('whats-due-cordova/config/environment', ['ember'], function(Ember) {\n  var prefix = 'whats-due-cordova';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"whats-due-cordova/tests/test-helper\");\n} else {\n  require(\"whats-due-cordova/app\")[\"default\"].create({\"name\":\"whats-due-cordova\",\"version\":\"0.0.1.715c6666\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbhxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbnechjlXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"whats-due-cordova.js"}